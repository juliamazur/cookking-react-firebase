// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileInput should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FileInput />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <input
        accept="image/*"
        data-test="fileInput"
        id="button-file"
        onChange={undefined}
        type="file"
/>,
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "accept": "image/*",
        "data-test": "fileInput",
        "id": "button-file",
        "onChange": undefined,
        "type": "file",
      },
      "ref": null,
      "rendered": null,
      "type": "input",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <input
          accept="image/*"
          data-test="fileInput"
          id="button-file"
          onChange={undefined}
          type="file"
/>,
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "accept": "image/*",
          "data-test": "fileInput",
          "id": "button-file",
          "onChange": undefined,
          "type": "file",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
